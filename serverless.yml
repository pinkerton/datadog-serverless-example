service: datadog-serverless-rest-api

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.7
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  custom:
    DATADOG_LAMBDA_LAYER: arn:aws:lambda:${self:provider.region, 'us-east-1'}:464622532012:layer:Datadog-Python37:35
  tracing: 
    lambda: true # https://serverless.com/framework/docs/providers/aws/guide/functions/#aws-x-ray-tracing
    apiGateway: true # https://serverless.com/blog/framework-release-v141/
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create: # inherits tracing settings from provider. can override per-function.
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true
    layers:
      - ${self:provider.custom.DATADOG_LAMBDA_LAYER}

  list:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true

  get:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  update:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true

  delete:
    handler: todos/delete.delete
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}


custom:
  # Disable compiling non-pure Python modules since it requires Docker
  # https://github.com/UnitedIncome/serverless-python-requirements#cross-compiling
  # https://github.com/UnitedIncome/serverless-python-requirements/pull/312
  pythonRequirements:
    dockerizePip: false
    noDeploy: []
